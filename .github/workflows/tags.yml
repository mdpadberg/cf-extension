name: tags

on:
  push:
    tags:
      - "v[0-9]+.[0-9]+.[0-9]+"

jobs:
  #devide in test, build, lint, create release, upload artifacts, etc
  create_release:
    name: Create release
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
    steps:
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        draft: false
        prerelease: false
  release:
    name: release
    needs: [create_release]
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
        - os: macos-latest
          rust-target: x86_64-apple-darwin
        - os: ubuntu-latest
          rust-target: x86_64-unknown-linux-gnu
        - os: windows-latest
          rust-target: x86_64-pc-windows-gnu
    steps:
    - name: Checkout project
      uses: actions/checkout@v2
    - name: Install Rust with cargo
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        target: ${{ matrix.rust-target }}
    - name: Run unit tests
      run: cargo test --verbose
#    - name: Run integration tests
#      run: cargo test -- --include-ignored
    - name: Build
      run: cargo build --release --target ${{ matrix.rust-target }}

    - name: Upload Release Asset
      id: upload-release-asset-windows
      uses: actions/upload-release-asset@v1
      if: matrix.os == 'windows-latest'
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ needs.create_release.outputs.upload_url }}
        asset_path: ./target/${{ matrix.rust-target }}/release/cfe.exe
        asset_name: cfe-${{ matrix.rust-target }}.exe
        asset_content_type: application/octet-stream
    - name: Upload Release Asset
      id: upload-release-asset-macos-ubuntu
      uses: actions/upload-release-asset@v1
      if: matrix.os == 'macos-latest' || matrix.os == 'ubuntu-latest'
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        upload_url: ${{ needs.create_release.outputs.upload_url }}
        asset_path: ./target/${{ matrix.rust-target }}/release/cfe
        asset_name: cfe-${{ matrix.rust-target }}
        asset_content_type: application/octet-stream