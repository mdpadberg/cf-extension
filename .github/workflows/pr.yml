name: pr

on:
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  unit-tests:
    name: run unit tests
    strategy:
      matrix:
        include:
        - os: macos-latest
          rust-target: x86_64-apple-darwin
        - os: ubuntu-latest
          rust-target: x86_64-unknown-linux-gnu
        - os: windows-latest
          rust-target: x86_64-pc-windows-gnu
    runs-on: ${{ matrix.os }}
    steps:
    - name: Set autocrlf
      shell: bash
      run: |
        if [ "${{ matrix.os }}" = "windows-latest" ]; then
          git config --global core.autocrlf false
        fi
    - name: Checkout project
      uses: actions/checkout@v4
    - name: Install Rust with cargo
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        target: ${{ matrix.rust-target }}
    - name: Run unit tests
      run: cargo test --verbose
  integration-tests:
    name: run integration tests
    runs-on: ubuntu-latest
    env:
      DOCKER_BUILDKIT: 1
    steps:
      - uses: actions/checkout@v4
      - name: check out the source code
        run: docker-compose up --exit-code-from mcf --build
